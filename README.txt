- using codeigniter 4.2.1

Does not do:
- ssl
- container versioning, api versioning
- deployment.  will build and run locally

TODO:
- application
- firgure out mocks
- docs
  - overview of project
  - API docs
  - architecture overview
  - command overview
  - howto/runbooks
  - comments/TODO/BUG
  - autogenerated code docs
  - references
    - Docker overview
    - MVC overview
    - php book
    - codeigniter docs
    - docker-compose reference
    - composer docs
    - jwt
  - tools list
    - docker, docker-compose
    - editor
    - API interactor (insomnia, postman)
    - bash
    - git
- cookies secure, same-site, httponly https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies
- requirements
  - security (xss, user auth)
  - perf: loads in less than x ms, page size less than x kb
  - compliance: validates to css 2.1 and xhtml transitional 1.0
  - code quality: style, strict types
- admin dashboard
- auth improvements
  - better roles management; roles to app mapping with separate table
  - signup via api
-strong typing



NOTES FOR PRESENTATION:
- what is this project
  - cynic philosophy, general outline
- why are we doing a group project
  - larger project, system testing required
- why do we have to learn php
  - exposing you to scenario of "trial by fire" learn a new language and new framework
  - not easy or comfortable but it happens a lot
  - php gets a lot of hate but codeigniter is a good framework and php 8 fixes a lot of issues
- why is this code so bad
  - rushed, new framework for me, didn't really plan (its a prototype)
  - all very common real world issues why software is terrible
  - important lesson on why code is bad, not because coder was an idiot
- what are we supposed to do with this
  - build a qa process with what exists and develop a new feature using that qa process
  - includes project documentation, test plans, and metrics
- whats wrong with this
  - application code is likely flawed
  - build process does work though
